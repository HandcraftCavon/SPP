#!/usr/bin/env python
from PiPlus import *

RoAPin = D9    # A Pin
RoBPin = D10    # B Pin
BtnPin = D11    # Button Pin

flag = 0
Last_RoB_Status = 0
Current_RoB_Status = 0

def setup():
	GPIO.setup(RoAPin, GPIO.IN)    # input mode
	GPIO.setup(RoBPin, GPIO.IN)
	GPIO.setup(BtnPin, GPIO.IN, pull_up_down=GPIO.PUD_UP)

def rotaryDeal(counter):
	global flag
	global Last_RoB_Status
	global Current_RoB_Status
	Last_RoB_Status = GPIO.input(RoBPin)
	while(not GPIO.input(RoAPin)):
		Current_RoB_Status = GPIO.input(RoBPin)
		flag = 1
	if flag == 1:
		flag = 0
		if (Last_RoB_Status == 0) and (Current_RoB_Status == 1):
			counter = counter + 1
		if (Last_RoB_Status == 1) and (Current_RoB_Status == 0):
			counter = counter - 1
	return counter

def btnISR(channel):
	global init_flag
	init_flag = 1

def loop():
	global init_flag
	counter = 0
	tmp = 0	# Rotary Temperary
	init_flag = 0
	GPIO.add_event_detect(BtnPin, GPIO.FALLING, callback=btnISR)
	while True:
		counter=rotaryDeal(counter)
		if init_flag == 1:
			counter = 0
			init_flag = 0
		if tmp != counter:
			print 'counter =', counter
			tmp = counter

def destroy():
	GPIO.cleanup()             # Release resource

if __name__ == '__main__':     # Program start from here
	setup()
	try:
		loop()
	except KeyboardInterrupt:  # When 'Ctrl+C' is pressed, the child program destroy() will be  executed.
		destroy()

